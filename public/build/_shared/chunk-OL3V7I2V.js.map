{
  "version": 3,
  "sources": ["../../../node_modules/@mantine/notifications/src/events.ts", "../../../node_modules/@mantine/notifications/esm/index.js"],
  "sourcesContent": ["import { useEffect } from 'react';\nimport type { NotificationProps, NotificationsContextProps } from './types';\n\ntype ValueOf<T> = T[keyof T];\n\nexport const NOTIFICATIONS_EVENTS = {\n  show: 'mantine:show-notification',\n  hide: 'mantine:hide-notification',\n  update: 'mantine:update-notification',\n  clean: 'mantine:clean-notifications',\n  cleanQueue: 'mantine:clean-notifications-queue',\n} as const;\n\nexport function createEvent(type: ValueOf<typeof NOTIFICATIONS_EVENTS>, detail?: any) {\n  return new CustomEvent(type, { detail });\n}\n\nexport function showNotification(notification: NotificationProps) {\n  window.dispatchEvent(createEvent(NOTIFICATIONS_EVENTS.show, notification));\n}\n\nexport function updateNotification(notification: NotificationProps & { id: string }) {\n  window.dispatchEvent(createEvent(NOTIFICATIONS_EVENTS.update, notification));\n}\n\nexport function hideNotification(id: string) {\n  window.dispatchEvent(createEvent(NOTIFICATIONS_EVENTS.hide, id));\n}\n\nexport function cleanNotifications() {\n  window.dispatchEvent(createEvent(NOTIFICATIONS_EVENTS.clean));\n}\n\nexport function cleanNotificationsQueue() {\n  window.dispatchEvent(createEvent(NOTIFICATIONS_EVENTS.cleanQueue));\n}\n\nexport function useNotificationsEvents(ctx: NotificationsContextProps) {\n  const events = {\n    show: (event: any) => ctx.showNotification(event.detail),\n    hide: (event: any) => ctx.hideNotification(event.detail),\n    update: (event: any) => ctx.updateNotification(event.detail.id, event.detail),\n    clean: ctx.clean,\n    cleanQueue: ctx.cleanQueue,\n  };\n\n  useEffect(() => {\n    Object.keys(events).forEach((event) => {\n      window.addEventListener(NOTIFICATIONS_EVENTS[event], events[event]);\n    });\n\n    return () => {\n      Object.keys(events).forEach((event) => {\n        window.removeEventListener(NOTIFICATIONS_EVENTS[event], events[event]);\n      });\n    };\n  }, []);\n}\n", "export { useNotifications } from './use-notifications/use-notifications.js';\nexport { NotificationsProvider } from './NotificationsProvider/NotificationsProvider.js';\nexport { cleanNotifications, cleanNotificationsQueue, hideNotification, showNotification, updateNotification } from './events.js';\n//# sourceMappingURL=index.js.map\n"],
  "mappings": ";;;;;;;;;AACY,IAAC,uBAAuB;EAClC,MAAM;EACN,MAAM;EACN,QAAQ;EACR,OAAO;EACP,YAAY;;AAEP,qBAAqB,MAAM,QAAQ;AACxC,SAAO,IAAI,YAAY,MAAM,EAAE;;AAE1B,0BAA0B,cAAc;AAC7C,SAAO,cAAc,YAAY,qBAAqB,MAAM;;;;ACZ9D;",
  "names": []
}
